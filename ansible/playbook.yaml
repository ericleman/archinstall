- hosts: localhost
  become: true

  tasks:
  - name: configure gdm
    block:
    - name: change Wayland to false
      replace:
        path: /etc/gdm/custom.conf
        regexp: '#WaylandEnable=false'
        replace: 'WaylandEnable=false'
    - name: auto login
      lineinfile:
        path: /etc/gdm/custom.conf
        regexp: '\[daemon\] '
        insertafter: '\[daemon\]'
        state: present
        line: "{{ item }}"
      with_items:
      - 'AutomaticLogin=eric'
      - 'AutomaticLoginEnable=True'

  - name: sudo without password
    community.general.sudoers:
      name: no-passwd-eric
      user: eric
      commands: ALL
      nopassword: yes

  - name: YAY
    block:
      - name: install GO as it seems to be prerequisite (otherwise crashes)
        pacman:
          name: 
            - go
          state: present        
      - name: install yay
        aur:
          name: yay
          use: makepkg
          state: present 
        become: yes
        become_user: eric

  - name: Install Chrome
    aur:
      use: yay
      name: google-chrome
    become: yes
    become_user: eric

  - name: Install wifi dongle driver
    aur:
      use: yay
      name: rtl88xxau-aircrack-dkms-git
    become: yes
    become_user: eric

  - name: Install and configure Pamac-aur
    block:
      - name: install pamac
        aur:
          use: yay
          name:
            - pamac-aur
        become: yes
        become_user: eric
      - name: copy config
        copy:
          src: /archinstall/ansible/config/pamac.conf 
          dest: /etc/pamac2.conf          

  - name: Enable pacman colorised output and verbose package lists
    replace:
      path: /etc/pacman.conf
      regexp: '{{ item.regexp }}'
      replace: '{{ item.replace }}'
    with_items:
      - { regexp: '^#Color$', replace: 'Color' }
      - { regexp: '^#VerbosePkgLists$', replace: 'VerbosePkgLists' }

  - name: install Neofetch
    block:
      - name: install
        pacman:
          name: neofetch
          state: present
      - name: configure
        ansible.builtin.lineinfile:
          path: /etc/bash.bashrc
          line: neofetch
          create: yes

  - name: install HP Printer [USER STILL HAS TO FIND PRINTER ONCE CONNECTED ON THE DESKTOP)
    block:
      - name: install printer packages (drivers, python-qt5 for GUI...)
        pacman:
          name: 
            - hplip
            - cups
            - python-reportlab
            - rpcbind
            - python-pyqt5
            - wget
          state: present
      - name: enable cups service
        ansible.builtin.systemd:
          name: cups
          enabled: yes

  - name: generic Gnome settings
    block:
      - name: psutils is required for dconf
        pacman:
          name: python-psutil
          state: present
      - name: font size
        become_user: eric
        dconf: key="/org/gnome/desktop/interface/text-scaling-factor" value="1.5"
      - name: maximize and minimize buttons
        become_user: eric
        dconf: key="/org/gnome/desktop/wm/preferences/button-layout" value="'appmenu:minimize,maximize,close'"
      - name: Show seconds on clock
        become_user: eric
        dconf: key="/org/gnome/desktop/interface/clock-show-seconds" value="true"
      - name: Cursor Themes
        block:
          - name: install cursor
            aur:
              use: yay
              name: bibata-cursor-theme
            become: yes
            become_user: eric
          - name: set them as theme
            become_user: eric
            dconf: key="/org/gnome/desktop/interface/cursor-theme" value="'Bibata-Modern-Amber'"
      - name: Icons Themes
        block:
          - name: install papirus
            pacman:
              name: papirus-icon-theme
              state: present
          - name: set them as theme
            become_user: eric
            dconf: key="/org/gnome/desktop/interface/icon-theme" value="'Papirus'"
      - name: Gnome Themes
        block:
          - name: install Arc
            pacman:
              name: arc-gtk-theme
              state: present
          - name: set them as GTK theme
            become_user: eric
            dconf: key="/org/gnome/desktop/interface/gtk-theme" value="'Arc-Dark'"
          - name: set them as Shell theme
            become_user: eric
            dconf: key="/org/gnome/shell/extensions/user-theme/name" value="'Arc-Dark'"
      - name: Wallpaper
        block:
          - name: light wallpaper
            become_user: eric
            dconf: key="/org/gnome/desktop/background/picture-uri" value="'file:///usr/share/backgrounds/gnome/libadwaita-l.jpg'"
          - name: dark wallpaper
            become_user: eric
            dconf: key="/org/gnome/desktop/background/picture-uri-dark" value="'file:///usr/share/backgrounds/gnome/libadwaita-d.jpg'"
          - name: screensaver wallpaper
            become_user: eric
            dconf: key="/org/gnome/desktop/screensaver/picture-uri" value="'file:///usr/share/backgrounds/gnome/libadwaita-l.jpg'"
      - name: Dash to Dock
        block:
          - name: install extension
            aur:
              use: yay
              name: gnome-shell-extension-dash-to-dock
            become: yes
            become_user: eric
          - name: configure
            become_user: eric
            dconf: key="/org/gnome/shell/extensions/dash-to-dock/show-trash" value="false"
      - name: Gnome Extension (this include Pamac indicator)
        become_user: eric
        dconf: key="/org/gnome/shell/enabled-extensions" value="['user-theme@gnome-shell-extensions.gcampax.github.com', 'pamac-updates@manjaro.org', 'dash-to-dock@micxgx.gmail.com']"
      - name: Favorite on Dock
        become_user: eric
        dconf: key="/org/gnome/shell/favorite-apps" value="['org.gnome.Nautilus.desktop', 'google-chrome.desktop', 'org.gnome.Terminal.desktop', 'org.manjaro.pamac.manager.desktop', 'gnome-system-monitor.desktop']"

